name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fool Docker Compose into thinking its the local machine
        run: touch .env.production

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/shortie:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}
            AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}
            AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }}
            BASE_URL=${{ secrets.BASE_URL }}
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            MAXMIND_LICENSE_KEY=${{ secrets.MAXMIND_LICENSE_KEY }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            PORT=${{ secrets.PORT }}
            REDIS_URL=${{ secrets.REDIS_URL }}

      -
        name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        env:
          AUTH_GOOGLE_ID : ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET : ${{ secrets.AUTH_GOOGLE_SECRET }}
          AUTH_SECRET : ${{ secrets.AUTH_SECRET }}
          AUTH_TRUST_HOST : ${{ secrets.AUTH_TRUST_HOST }}
          BASE_URL : ${{ secrets.BASE_URL }}
          DOCKER_USERNAME : ${{ secrets.DOCKER_USERNAME }}
          MAXMIND_LICENSE_KEY : ${{ secrets.MAXMIND_LICENSE_KEY }}
          MONGODB_URI : ${{ secrets.MONGODB_URI }}
          PORT : ${{ secrets.PORT }}
          REDIS_URL : ${{ secrets.REDIS_URL }}
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_PRIVATE_KEY }}
          script: |
            mkdir -p ./projects/shortie
            cd ./projects/shortie
            touch .env.production
            source ~/.bashrc
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            curl -L -o ./docker-compose.yaml https://raw.githubusercontent.com/silverstone-git/shortie/main/docker-compose.yaml
            docker-compose pull
            docker-compose down
            docker-compose up -d
